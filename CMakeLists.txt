# Created by the script cgal_create_cmake_script
# This is the CMake script for compiling a CGAL application.


set(CMAKE_CXX_STANDARD 11)

cmake_minimum_required(VERSION 2.6.2)
if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}" VERSION_GREATER 2.8.3)
  cmake_policy(VERSION 2.8.4)
else()
  cmake_policy(VERSION 2.6)
endif()
set(External_DIR ${CMAKE_CURRENT_SOURCE_DIR}/..)
message(STATUS "Pleae make sure that you have compiled Protobuf and copied libprotobuf.lib, 
protoc.exe, libprobuf-lite.lib, libprotoc.lib to 
${External_DIR}/include/arch/${CMAKE_BUILD_TYPE}/ folder, where arch=Win32 or x64")

if(MSVC)
	if(CMAKE_BUILD_TYPE STREQUAL "Debug")
		if(WIN32)
			set(PROTOBUF_LIBRARY ${External_DIR}/include/Win32/Debug/libprotobuf.lib)
			set(PROTOBUF_PROTOC_EXECUTABLE ${External_DIR}/include/Win32/Debug/protoc.exe)
			set(PROTOBUF_LITE_LIBRARY ${External_DIR}/include/Win32/Debug/libprotobuf-lite.lib)
			set(PROTOBUF_PROTOC_LIBRARY ${External_DIR}/include/Win32/Debug/libprotoc.lib)
		else(WIN32)
			set(PROTOBUF_LIBRARY ${External_DIR}/include/x64/Debug/libprotobuf.lib)
			set(PROTOBUF_PROTOC_EXECUTABLE ${External_DIR}/include/x64/Debug/protoc.exe)
			set(PROTOBUF_LITE_LIBRARY ${External_DIR}/include/x64/Debug/libprotobuf-lite.lib)
			set(PROTOBUF_PROTOC_LIBRARY ${External_DIR}/include/x64/Debug/libprotoc.lib)
		endif(WIN32)
		set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build." FORCE)
		set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS  "Debug" "Release")
	endif(CMAKE_BUILD_TYPE STREQUAL "Debug")
	if(CMAKE_BUILD_TYPE STREQUAL "Release")
		if(WIN32)
			set(PROTOBUF_LIBRARY ${External_DIR}/include/Win32/Release/libprotobuf.lib)
			set(PROTOBUF_PROTOC_EXECUTABLE ${External_DIR}/include/Win32/Release/protoc.exe)
			set(PROTOBUF_LITE_LIBRARY ${External_DIR}/include/Win32/Release/libprotobuf-lite.lib)
			set(PROTOBUF_PROTOC_LIBRARY ${External_DIR}/include/Win32/Release/libprotoc.lib)
		else(WIN32)
			set(PROTOBUF_LIBRARY ${External_DIR}/include/x64/Release/libprotobuf.lib)
			set(PROTOBUF_PROTOC_EXECUTABLE ${External_DIR}/include/x64/Release/protoc.exe)
			set(PROTOBUF_LITE_LIBRARY ${External_DIR}/include/x64/Release/libprotobuf-lite.lib)
			set(PROTOBUF_PROTOC_LIBRARY ${External_DIR}/include/interface/x64/Release/libprotoc.lib)
		endif(WIN32)
		set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build." FORCE)
		set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Release" "Debug")
	endif(CMAKE_BUILD_TYPE STREQUAL "Release")

	set(PROTOBUF_INCLUDE_DIR ${External_DIR}/interface/msvc)
	set(PROTOBUF_SRC_ROOT_FOLDER ${External_DIR}/include/src)
	if(WIN32)
		include_directories(C:/Qt/4.8.6/Win32/include)
		SET(VTK_DIR C:/VTK32/bin CACHE PATH "VTK directory override" FORCE)
	else(WIN32)
		include_directories(C:/Qt/4.8.6/x64/include)
		SET(VTK_DIR C:/VTK64/bin CACHE PATH "VTK directory override" FORCE)
	endif(WIN32)
	include_directories(${External_DIR}/include/msvc ${External_DIR}/include/msvc/include)
elseif (CMAKE_COMPILER_IS_GNUCXX)
	include_directories(include/gnu)
	set(PROTOBUF_INCLUDE_DIR include/gnu)
	message("Using g++, turning on all warnings")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra")
endif()

include_directories(include)

set(PROTOBUF_DIR ${CMAKE_CURRENT_SOURCE_DIR}/pb)

add_subdirectory(lib)
add_subdirectory(src)
